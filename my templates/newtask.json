{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "testing ec2 with cf",
    "Parameters":
    {
        "cidrvpc": 
        {
            "Description": "cidr range for vpc",
            "Type": "String",
            "Default": "10.25.0.0/16",
            "AllowedValues": ["10.25.0.0/16","192.168.0.0/16"]
        },
        "cidrsubnet": 
        {
            "Description": "cidr range for subnet",
            "Type": "String",
            "Default": "10.25.0.0/24",
            "AllowedValues":["10.25.0.0/24","192.168.0.0/24"]
        },
        "subnetAZ": 
        {
            "Description": "AZ for Subnet",
            "Type": "String",
            "Default": "us-east-2a",
            "AllowedValues":["us-east-2a","us-east-2b","us-east-2c"]
        },
        "imageid": 
        {
            "Description": "image id for instances",
            "Type": "String",
            "Default": "ami-0552e3455b9bc8d50",
            "AllowedValues":[ "ami-0552e3455b9bc8d50", "ami-0cf31d971a3ca20d6" ]
        },
        "instypes": 
        {
            "Description": "instance types",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues":[ "t2.micro", "t2.nano", "t2.large" ]
        },
        "Key": 
        {
            "Description": "Key pairs",
            "Type": "String",
            "Default": "First",
            "AllowedValues":[ "First", "Second" ]
        }
    },
    "Resources":
    {
        "myvpc": 
        {
            "Description": "Its a new vpc",
            "Type": "AWS::EC2::VPC",
            "Properties":
            {
                "CidrBlock" : { "Ref": "cidrvpc" },
                "EnableDnsSupport" : true,
                "EnableDnsHostnames" : true
            }
        },
        "mysubnet": 
        {
            "Description": "its a new public subnet",
            "Type": "AWS::EC2::Subnet",
            "Properties":
            {
                "AvailabilityZone" : { "Ref": "subnetAZ" },
                "CidrBlock" : { "Ref": "cidrsubnet" },
                "MapPublicIpOnLaunch" : true,
                "VpcId" : { "Ref": "myvpc" }
            }
        },
        "prisubnet": 
        {
          "Description": "its a new private subnet",
          "Type": "AWS::EC2::Subnet",
          "Properties": 
          {
            "AvailabilityZone": "us-east-2b",
            "VpcId": { "Ref": "myvpc" },
            "CidrBlock": "192.168.1.0/24",
          }
        },
        "mysg": 
        {
            "Description": "new security group",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties":
            {
                "GroupName" : "new sg",
                "GroupDescription" : "new sgg",
                "VpcId" : { "Ref": "myvpc" },
                "SecurityGroupIngress" : 
                [{
                    "IpProtocol" : "tcp",
                    "FromPort" : 22,
                    "ToPort" : 22,
                    "CidrIp" : "0.0.0.0/0"
                 }]
            }
        },
        "igw": 
        {
            "Description": "new igw",
            "Type": "AWS::EC2::InternetGateway"
        },
        "vpcigwattach": 
        {
            "Description": "Attaching VPC and gateway",
            "Type":"AWS::EC2::VPCGatewayAttachment",
            "Properties" : 
            {
                "InternetGatewayId" : { "Ref": "igw" },
                "VpcId" : { "Ref": "myvpc" },
            }
        },
        "newRT": 
        {
            "Description": "creating new RT",
            "Type": "AWS::EC2::RouteTable",
            "Properties":
            {
                "VpcId" : { "Ref": "myvpc" }
            }
        },
        "priRT": 
        {
          "Type": "AWS::EC2::RouteTable",
          "Properties": 
          {
            "VpcId": { "Ref": "myvpc" },
          }
        },
        "prisubRTAss": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": 
          {
            "SubnetId": { "Ref": "prisubnet" },
            "RouteTableId": { "Ref": "priRT" }
          }
        },
        "routeTableAssocName": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": 
            {
              "SubnetId": { "Ref": "mysubnet" },
              "RouteTableId": { "Ref": "newRT" }  
            }
          },
        "routetableentries": 
        {
          "Type": "AWS::EC2::Route",
          "Properties": 
          {
            "RouteTableId": { "Ref": "newRT" },
            "DestinationCidrBlock": "0.0.0.0/0",
            "GatewayId": { "Ref": "igw" }  
          }
        },
        "awsec2": 
        {
            "Description": "creating new instance",
            "Type": "AWS::EC2::Instance",
            "Properties":
            {
                "AvailabilityZone" : { "Ref": "subnetAZ" },
                "ImageId" : { "Ref": "imageid" },
                "InstanceType" : { "Ref": "instypes" },
                "KeyName" : { "Ref": "Key" },
                "SecurityGroupIds" : [{ "Ref": "mysg" }],
                "SubnetId" :  { "Ref": "mysubnet" }
            }
        },
        "awsdbins": 
        {
          "Type": "AWS::RDS::DBInstance",
          "Properties": 
          {
            "AllocatedStorage": "20GB",
            "DBInstanceClass": "db.t2.micro",
            "AllowMajorVersionUpgrade": false,
            "AutoMinorVersionUpgrade": true,
            "AvailabilityZone": "us-east-2b",
            "DBInstanceIdentifier" :"practest",
            "DBName": "test",
            "DBSecurityGroups": [ "" ],
            "Engine": "MySQL",
            "EngineVersion": "5.7.22",
            "MasterUsername": "dbtester",
            "MasterUserPassword": "firefox123",
            "MultiAZ": false,
            "Port": "3306",
            "PubliclyAccessible": true,
            "VPCSecurityGroups": { "Ref": "myvpc" }
          }
        }
    },
    "Outputs":
    {
        "VpcID" : 
        {
        "Value" : { "Ref": "myvpc" }
        },
        "SubnetID" : 
        {
          "Value" : { "Ref": "mysubnet" }
        },
        "PublicIP" : 
        {
          "Value" : {"Fn::GetAtt" : [ "awsec2" , "PublicIp" ]}
        }
    }
}